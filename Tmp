import re
from collections import deque
from readfile import rf
from main import convert
from Sqrtfix import sqrt_string_match
queue = deque([])

def getEqu():
    try:
        result = " "
        intermediateResult= " "
        matchingTags = r"begin{equation}(.*?)end{equation}"
        Inputstr ="\\alpha"
        print(Inputstr)
        #print("Opening a file...")
        #Inputfile = open("G:/LaTex/ALLTRYS/Newtry1/S/Inputdoc.tex", "r")
        #Inputstr = Inputfile.read()
        print("Reading done")
        matches = re.finditer(matchingTags,Inputstr,re.MULTILINE | re.DOTALL)
        print("Matching string")
        if matches:
            for matchNum, match in enumerate(matches):
                for groupNum in range(0, len(match.groups())):
                    intermediateResult = match.group(1)
            result = convert(intermediateResult)
            result=result.replace('\n',' ')
        elif matches is null:
            result = convert(Inputstr)
        #result = sqrt_string_match(intermediateResult)
        #Inputfile.close()
        print(result)
        print("terminated reading mode")

        print("Writing file")
        with open("G:/LaTex/ALLTRYS/Newtry1/S/Outputdoc.txt", "w+") as Outputfile:
            Outputfile.write(result)
        print("completed writing")
        Outputfile.close()
        print("Process completed")

        #print("Reading a file")
        #rf()
        #Input.close()
    except Exception as e:
        print("Exception:")
        print(e)

getEqu()