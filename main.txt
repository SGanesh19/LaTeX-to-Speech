from collections import deque
import  matchingstring
import dict
import re
from gtts import gTTS
queue=deque([])
string=""
str=""
dictstr=""
flag=0
class Inputspliter:
    def oneoperators( inputstr ):
      print(input)
    def twoparameters(self,input):
        first=queue.popleft()
        second=queue.popleft()
        if input=='':
            finalstr=first+" "+second
        else:
          finalstr = first + " " + input + " " + second
        queue.appendleft(finalstr)
        return finalstr
InputLatex=input("Enter the Latex format:")
match=re.match('sum_{.*?=.*?}\^{.*?}|prod_{.*?=.*?}\^{.*?}|int_{.*?}\^{.*?}',InputLatex)
print(match)
data=matchingstring.latextolist(InputLatex)
for equ in data:
    if equ in dict.Relational:
        dictstr=dict.Relational.get(equ)
    elif equ !='':
        if(equ in dict.greekletters):
             queue.append(dict.greekletters.get(equ))
        else:
            queue.append(equ)
        if queue.__len__()==2:
             fs=Inputspliter().twoparameters(dictstr)
             dictstr=''
             match=matchingstring.longestSubstringFinder(str, fs)
             if match in str:
               str = str.replace(match,fs)
             else:
               str=str+" "+fs
#matchingstring.display(str,match)
print('str before:'+str)
if (match):
   print('in')
   str = re.sub('to the superscript of', 'to', str, 1)
print(str)
